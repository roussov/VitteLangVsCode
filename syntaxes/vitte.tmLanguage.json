{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Vitte",
  "scopeName": "source.vitte",
  "fileTypes": ["vit", "vitte"],
  "patterns": [
    { "include": "#shebang" },
    { "include": "#comments-doc" },
    { "include": "#comments" },
    { "include": "#attributes" },
    { "include": "#use" },
    { "include": "#module" },
    { "include": "#type-decls" },
    { "include": "#impl" },
    { "include": "#fn-def" },
    { "include": "#fn-call" },
    { "include": "#strings" },
    { "include": "#char" },
    { "include": "#numbers" },
    { "include": "#keywords" },
    { "include": "#types-primitive" },
    { "include": "#booleans" },
    { "include": "#macros" },
    { "include": "#operators" },
    { "include": "#punctuation" }
  ],
  "repository": {
    "shebang": {
      "name": "comment.line.shebang.vitte",
      "match": "^(#!).*$",
      "captures": {
        "1": { "name": "punctuation.definition.comment.vitte" }
      }
    },

    "comments-doc": {
      "patterns": [
        {
          "name": "comment.block.documentation.vitte",
          "begin": "/\\*\\*",
          "beginCaptures": { "0": { "name": "punctuation.definition.comment.begin.vitte" } },
          "end": "\\*/",
          "endCaptures": { "0": { "name": "punctuation.definition.comment.end.vitte" } },
          "patterns": [{ "include": "#todo" }]
        },
        {
          "name": "comment.line.documentation.vitte",
          "match": "///.*$"
        }
      ]
    },

    "comments": {
      "patterns": [
        {
          "name": "comment.block.vitte",
          "begin": "/\\*",
          "beginCaptures": { "0": { "name": "punctuation.definition.comment.begin.vitte" } },
          "end": "\\*/",
          "endCaptures": { "0": { "name": "punctuation.definition.comment.end.vitte" } },
          "patterns": [{ "include": "#todo" }]
        },
        {
          "name": "comment.line.double-slash.vitte",
          "begin": "//",
          "beginCaptures": { "0": { "name": "punctuation.definition.comment.vitte" } },
          "end": "$",
          "patterns": [{ "include": "#todo" }]
        }
      ]
    },

    "todo": {
      "name": "meta.annotation.todo.vitte",
      "match": "\\b(TODO|FIXME|BUG|HACK|OPTIMIZE|NOTE)\\b"
    },

    "attributes": {
      "name": "meta.annotation.vitte",
      "begin": "#\\[",
      "beginCaptures": { "0": { "name": "punctuation.definition.annotation.begin.vitte" } },
      "end": "\\]",
      "endCaptures": { "0": { "name": "punctuation.definition.annotation.end.vitte" } },
      "patterns": [
        { "include": "#strings" },
        { "include": "#numbers" },
        { "include": "#ident-path" }
      ]
    },

    "use": {
      "name": "meta.import.vitte",
      "begin": "\\b(use)\\b",
      "beginCaptures": { "1": { "name": "keyword.other.import.vitte" } },
      "end": "(?=;)",
      "patterns": [
        { "include": "#comments" },
        { "include": "#ident-path" },
        {
          "name": "keyword.control.as.vitte",
          "match": "\\b(as)\\b"
        },
        {
          "name": "punctuation.section.braces.vitte",
          "match": "[{}*,]"
        }
      ]
    },

    "module": {
      "name": "meta.namespace.vitte",
      "begin": "\\b(module)\\s+",
      "beginCaptures": { "1": { "name": "keyword.other.module.vitte" } },
      "end": "(?=[;{])",
      "patterns": [
        { "include": "#ident-path" }
      ]
    },

    "ident-path": {
      "name": "entity.name.namespace.vitte",
      "match": "[A-Za-z_][A-Za-z0-9_]*(?:(::|\\.)[A-Za-z_][A-Za-z0-9_]*)*"
    },

    "type-decls": {
      "patterns": [
        {
          "name": "meta.struct.vitte",
          "begin": "\\b(struct)\\s+([A-Za-z_][A-Za-z0-9_]*)",
          "beginCaptures": {
            "1": { "name": "storage.type.struct.vitte" },
            "2": { "name": "entity.name.type.vitte" }
          },
          "end": "(?=[;{])"
        },
        {
          "name": "meta.enum.vitte",
          "begin": "\\b(enum)\\s+([A-Za-z_][A-Za-z0-9_]*)",
          "beginCaptures": {
            "1": { "name": "storage.type.enum.vitte" },
            "2": { "name": "entity.name.type.vitte" }
          },
          "end": "(?=[;{])"
        },
        {
          "name": "meta.trait.vitte",
          "begin": "\\b(trait)\\s+([A-Za-z_][A-Za-z0-9_]*)",
          "beginCaptures": {
            "1": { "name": "storage.type.trait.vitte" },
            "2": { "name": "entity.name.type.vitte" }
          },
          "end": "(?=[;{])"
        }
      ]
    },

    "impl": {
      "name": "meta.impl.vitte",
      "begin": "\\b(impl)\\b",
      "beginCaptures": { "1": { "name": "keyword.declaration.impl.vitte" } },
      "end": "(?={|;)",
      "patterns": [
        { "include": "#ident-path" },
        {
          "name": "keyword.control.for.vitte",
          "match": "\\bfor\\b"
        }
      ]
    },

    "fn-def": {
      "name": "meta.function.vitte",
      "begin": "\\b(fn)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(\\()",
      "beginCaptures": {
        "1": { "name": "storage.type.function.vitte" },
        "2": { "name": "entity.name.function.vitte" },
        "3": { "name": "punctuation.section.parameters.begin.vitte" }
      },
      "end": "(\\))",
      "endCaptures": {
        "1": { "name": "punctuation.section.parameters.end.vitte" }
      },
      "patterns": [
        { "include": "#comments" },
        { "include": "#strings" },
        { "include": "#char" },
        { "include": "#numbers" },
        { "include": "#types-primitive" },
        { "include": "#booleans" },
        { "include": "#ident-path" },
        {
          "name": "variable.parameter.vitte",
          "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
        },
        {
          "name": "punctuation.separator.parameter.vitte",
          "match": ","
        },
        {
          "name": "punctuation.separator.type.vitte",
          "match": ":"
        }
      ]
    },

    "fn-call": {
      "name": "meta.function-call.vitte",
      "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\s*(?=\\()",
      "captures": {
        "1": { "name": "entity.name.function.vitte" }
      }
    },

    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.vitte",
          "begin": "\"",
          "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.vitte" } },
          "end": "\"",
          "endCaptures": { "0": { "name": "punctuation.definition.string.end.vitte" } },
          "patterns": [
            {
              "name": "constant.character.escape.vitte",
              "match": "\\\\(?:[nrt\"'\\\\]|x[0-9A-Fa-f]{2}|u\\{[0-9A-Fa-f_]{1,6}\\})"
            }
          ]
        },
        {
          "name": "string.quoted.double.raw.vitte",
          "begin": "r(#*)\\\"",
          "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.vitte" } },
          "end": "\\\"\\1",
          "endCaptures": { "0": { "name": "punctuation.definition.string.end.vitte" } }
        }
      ]
    },

    "char": {
      "name": "string.quoted.single.char.vitte",
      "match": "'(?:\\\\.|[^'\\\\])'"
    },

    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.vitte",
          "match": "\\b0x[0-9A-Fa-f](?:[0-9A-Fa-f_]*[0-9A-Fa-f])?\\b"
        },
        {
          "name": "constant.numeric.bin.vitte",
          "match": "\\b0b[01](?:[01_]*[01])?\\b"
        },
        {
          "name": "constant.numeric.oct.vitte",
          "match": "\\b0o[0-7](?:[0-7_]*[0-7])?\\b"
        },
        {
          "name": "constant.numeric.float.vitte",
          "match": "\\b\\d(?:[\\d_]*\\d)?(?:\\.\\d(?:[\\d_]*\\d)?)?(?:[eE][+-]?\\d(?:[\\d_]*\\d)?)\\b"
        },
        {
          "name": "constant.numeric.dec.vitte",
          "match": "\\b\\d(?:[\\d_]*\\d)?\\b"
        }
      ]
    },

    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.vitte",
          "match": "\\b(if|else|match|for|while|loop|break|continue|return)\\b"
        },
        {
          "name": "storage.modifier.vitte",
          "match": "\\b(pub)\\b"
        },
        {
          "name": "storage.type.binding.vitte",
          "match": "\\b(let|const)\\b"
        },
        {
          "name": "keyword.operator.word.vitte",
          "match": "\\b(as|in|where)\\b"
        }
      ]
    },

    "types-primitive": {
      "name": "storage.type.primitive.vitte",
      "match": "\\b(i8|i16|i32|i64|i128|isize|u8|u16|u32|u64|u128|usize|f32|f64|bool|char|str|void)\\b"
    },

    "booleans": {
      "name": "constant.language.boolean.vitte",
      "match": "\\b(true|false)\\b"
    },

    "macros": {
      "name": "support.function.macro.vitte",
      "match": "\\b([A-Za-z_][A-Za-z0-9_]*)!"
    },

    "operators": {
      "name": "keyword.operator.vitte",
      "match": "(::|->|=>|==|!=|<=|>=|&&|\\|\\||\\+\\+|--|\\+|-|\\*|/|%|=|\\+=|-=|\\*=|/=|%=|&|\\||\\^|~|!|<<|>>|\\?|\\.)"
    },

    "punctuation": {
      "patterns": [
        { "name": "punctuation.section.block.begin.vitte", "match": "\\{" },
        { "name": "punctuation.section.block.end.vitte", "match": "\\}" },
        { "name": "punctuation.section.group.begin.vitte", "match": "\\(" },
        { "name": "punctuation.section.group.end.vitte", "match": "\\)" },
        { "name": "punctuation.section.brackets.begin.vitte", "match": "\\[" },
        { "name": "punctuation.section.brackets.end.vitte", "match": "\\]" },
        { "name": "punctuation.terminator.statement.vitte", "match": ";" },
        { "name": "punctuation.separator.vitte", "match": "," },
        { "name": "punctuation.separator.key-value.vitte", "match": ":" }
      ]
    }
  },
  "uuid": "d2c0a7b6-5e6f-4c1e-9f5c-0c9e2c7b3f80"
}
